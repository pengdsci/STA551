/****************************************************************
Suggested Solution to Assignment #1

- Merge all four data tables that contains all information in 
  all individual tables 
****************************************************************/


/*** Load data to SAS and create their corresponding SAS data sets ***/

LIBNAME HW1 "/home/u50445699/STA551/Assignment01";

filename dat01 url 'https://pengdsci.github.io/datasets/PetCareData/PetsInfomation.csv';
filename dat02 url 'https://pengdsci.github.io/datasets/PetCareData/PetsOwners.csv';
filename dat03 url 'https://pengdsci.github.io/datasets/PetCareData/ProceduresDetails.csv';
filename dat04 url 'https://pengdsci.github.io/datasets/PetCareData/ProceduresHistory.csv';

*write a macro to load multiple data files;

%MACRO IMPORTCSV(in_csv, out_sas);
PROC IMPORT DATAFILE=&in_csv 
   DBMS=csv 
   OUT=HW1.&out_sas 
   REPLACE;
RUN;
%MEND;

*call macros to load data files;
%IMPORTCSV(dat01, pets);
%IMPORTCSV(dat02, owners);
%IMPORTCSV(dat03, detail);
%IMPORTCSV(dat04, history);



/*  --------- Exploring Data Sets  --------------

   1. Distinct pet counts in the two related tables:
   History Table:  2261
      Pets Table:  100  

   2. Distinct owner counts in the two related table
      Pets Table:  89
    Owners Table:  89
*/

PROC SQL;
CREATE TABLE PetCountsHist AS   /* place this table in the temp lib*/
SELECT DISTINCT PetID
FROM hw1.History;

CREATE TABLE PetCountsPets AS    
SELECT DISTINCT PetID
FROM hw1.pets;

CREATE TABLE OwnerCountsPets AS    
SELECT DISTINCT OwnerID
FROM hw1.pets;

CREATE TABLE OwnerCountsOwners AS    
SELECT DISTINCT OwnerID
FROM hw1.owners;
Quit;


/*  ----------  How many pets in Pets Table received any procedures:
   31 distinct pets received 38 different procedures             */

PROC SQL;

/* number of distinct pets in both both HistDetail and PetsOwner tables */
CREATE TABLE hw1.CommonPetID AS
SELECT DISTINCT PetID
FROM hw1.PetsOwner
INTERSECT
SELECT DISTINCT PetID
FROM hw1.HistDetail
ORDER BY PetID;

/* Find all procedures performed on pets in  HistDetail and PetsOwner tables*/
CREATE TABLE hw1.TreatedPets AS
SELECT PetID
FROM hw1.History
WHERE PetID IN (SELECT PetID FROM hw1.CommonPetID)
ORDER BY PetID;
QUIT;

/*********************************************************
         Brief description of the four data tables.
 ********************************************************
   Pets table: contains information of 100 pets
   
  Owner table: contains information of pets' owner. Note that some of the owners may have more than one pet.
  
History table: has historical information of different procedures. This is a longitudinal data since each 
               pet might have different prceodures performed at different times.

Details table: contains procedures and their corresponding prices. This table in independent of individual pets. 
               The procedure price is set based on the procedure types and procedure code. Both *procedue-type* and 
               *procedure code* cannot be used as standalone keys. We need to define a conposite ket in order to
               join with *history* table (need to define the same composite key in the table).
**/



/** Define the composite key from history abd Detail tables and then join the two tables**/

PROC SQL;
/* Define a composite key */
CREATE TABLE HW1.NewDetail AS
SELECT *, 
      CATS(ProcedureType, '-', ProcedureSubCode) AS CompKey
FROM HW1.detail;

/* define the composite key */
CREATE TABLE HW1.NewHistory AS
SELECT *, 
      CATS(ProcedureType, '-', ProcedureSubCode) AS CompKey
FROM HW1.history;

/* inner join the two tales: the primary key CompKey*/
CREATE TABLE HW1.HistDetail AS
SELECT * 
FROM HW1.Newdetail AS D
INNER JOIN HW1.Newhistory AS H
ON D.CompKey = H.CompKey;
QUIT;



/* Join the tables pets and owners so that when searching a pets, we can find its owner's information: 
   the primary key: OwnerID*/
PROC SQL;
CREATE TABLE HW1.PetsOwner AS
SELECT * 
FROM HW1.Pets AS P
INNER JOIN HW1.Owners AS O
ON P.OwnerID = O.OwnerID;
QUIT;

/* checking distinct PetIDs in both of the above merged data sets:
   31 distinct pets in both HistDetail and PetsOwner tables    */

PROC SQL;
CREATE TABLE hw1.CommonPetID AS
SELECT DISTINCT PetID
FROM hw1.PetsOwner
INTERSECT
SELECT DISTINCT PetID
FROM hw1.HistDetail
ORDER BY PetID;
QUIT;


/* Find all procedures performed on pets in  HistDetail and PetsOwner tables:
   38 procedured were performed on the above 31 pets */

PROC SQL;
CREATE TABLE hw1.TreatedPets AS
SELECT *
FROM hw1.History
WHERE PetID IN (SELECT PetID FROM hw1.CommonPetID)
ORDER BY PetID;
QUIT;


/* Make the final single data set by merging PetsOwner table and HistDetail table using primary key PetID*/

PROC SQL;
CREATE TABLE HW1.FinalPetInfo AS
SELECT * 
FROM HW1.PetsOwner AS A
FULL JOIN HW1.HistDetail AS B
ON A.PetID = B.PetID;
QUIT;


/********************************************
          Final Data Set Creation
          
 It is dependent on the goals of the subsequent 
 projects. The final data set could be focused only
 on the treated set. We could also include all 
 infomation in individual data sets.
 *********************************************/


PROC SQL;
/* Treated pets only  */
CREATE TABLE hw1.FinalTreatedPets AS
SELECT * 
FROM HW1.PetsOwner AS A
INNER JOIN HW1.HistDetail AS B
ON A.PetID = B.PetID;

/* all pets*/
CREATE TABLE HW1.FinalAllPetInfo AS
SELECT * 
FROM HW1.PetsOwner AS A
FULL JOIN HW1.HistDetail AS B
ON A.PetID = B.PetID;
QUIT;


